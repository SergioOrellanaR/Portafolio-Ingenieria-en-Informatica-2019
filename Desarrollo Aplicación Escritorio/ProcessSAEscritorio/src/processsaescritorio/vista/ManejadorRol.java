/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package processsaescritorio.vista;

import java.awt.Component;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import processsaescritorio.controlador.*;
import processsaescritorio.modelo.*;


/**
 *
 * @author Brayan
 */
public class ManejadorRol extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManejadorRol
     */
    ArrayList<RolDTO> listaRol;
    ArrayList<PermisoDTO> listarPermisos;
    private boolean rolIdentificado=false;
    private int idGeneral=0;
    
    CustomListModel list_model = new CustomListModel();
    public ManejadorRol() {
        initComponents();
        actualizarListaRol();
        listPermisos.setModel(list_model);
        listaPermisos();

    }
    
    public void resetearTabla()
    {
        listaRol.removeAll(listaRol);
        actualizarListaRol();
    }
    
    //logica Permisos
    @SuppressWarnings("unchecked")
    public void listaPermisos(){
        listarPermisos= new Lista().listarPermisos();
       
        DefaultListModel dfl=new DefaultListModel();
        
        for(PermisoDTO permiso : listarPermisos){
            String id       = String.valueOf(permiso.getId());
            String name     = String.valueOf(permiso.getNombre());
            String description = String.valueOf(permiso.getDescripcion());
   
            Object[] elemento = {id,name,description};
           
            
            list_model.addPermiso(permiso);
            dfl.addElement(id+"-"+name+"-"+description);
        }
        
            //listPermisos.setModel(dfl);   
            
            
    }
    
    private boolean containsString(String testString, ArrayList<String> list) 
    {
        return list.contains(testString);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnGrabar = new javax.swing.JButton();
        btnRolPermisos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRol = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPermisos = new javax.swing.JList<>();

        jButton2.setText("Crear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setClosable(true);

        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Creacion de Rol");

        btnGrabar.setText("Crear");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnRolPermisos.setText("Otorgar Permisos");
        btnRolPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRolPermisosActionPerformed(evt);
            }
        });

        tblRol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRol);

        listPermisos.setToolTipText("");
        jScrollPane2.setViewportView(listPermisos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGrabar)
                                .addGap(31, 31, 31)
                                .addComponent(btnRolPermisos))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 369, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGrabar)
                    .addComponent(btnRolPermisos))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setBounds(500, 150, 633, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        
        new Registro().registrarRol(0,txtName.getText());
        resetearTabla();
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnRolPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRolPermisosActionPerformed
      // listPermisos.getSelectedValuesList();     
        //ArrayList<int> b = new ArrayList<int>();
       // System.out.println(listPermisos.getSelectedValuesList());
       //hay que ponerle validaciones
       int[] selection = listPermisos.getSelectedIndices();
        for (int i = 0; i < list_model.getSize(); i++) {
            for (String s : listPermisos.getSelectedValuesList()) {
                if (list_model.getElementAt(i).toString().equalsIgnoreCase(s)) {
                     System.out.println(list_model.getElementAt(i));
                     new Registro().registrarPermisoPorRol(idGeneral,list_model.getIdPermiso(i));
                }
            }  
//            if (list_model.getElementAt(i).toString().equalsIgnoreCase(listPermisos.getSelectedValue())) {
//                            System.out.println(list_model.getElementAt(i));
//
//            }
        }
        /*
        for (int i = 0; i <=listPermisos.getComponentCount(); i++) {
            new Registro().registrarPermisoPorRol(i, 2);
        }*/
     
        //JOptionPane.showConfirmDialog(rootPane, "Se ha encontrado y seleccionado la incidencia."+ listPermisos.getSelectedValuesList(), "Usuario encontrado", WIDTH);
    }//GEN-LAST:event_btnRolPermisosActionPerformed

    private void tblRolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRolMouseClicked
        int seleccion= tblRol.rowAtPoint(evt.getPoint());
        int id=Integer.parseInt(String.valueOf(tblRol.getValueAt(seleccion,0)));
        
        rolIdentificado=true;
        idGeneral=id;

        RolDTO rol=new RolDAO().obtenerRolPorIdBD(id);
        txtName.setText(rol.getName());
    }//GEN-LAST:event_tblRolMouseClicked

    public void actualizarListaRol(){
        listaRol = new Lista().listarRoles();
        String[] columnas = {"ID", "Nombre"};
        DefaultTableModel modeloTabla = new DefaultTableModel(columnas, 0){
        @Override
        public boolean isCellEditable(int filas,int columnas){
            return false;
        }
        };
        
        for(RolDTO rol : listaRol){
            String id       = String.valueOf(rol.getId());
            String name     = String.valueOf(rol.getName());
   
            Object[] elemento = {id,name};
            modeloTabla.addRow(elemento);
        };
        tblRol.setModel(modeloTabla);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnRolPermisos;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listPermisos;
    private javax.swing.JTable tblRol;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}

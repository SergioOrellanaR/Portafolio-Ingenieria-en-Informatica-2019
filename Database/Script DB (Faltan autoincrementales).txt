-- Generado por Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   en:        2019-08-20 08:07:18 CLT
--   sitio:      Oracle Database 11g
--   tipo:      Oracle Database 11g



CREATE TABLE assigned_unit (
    id                 INTEGER NOT NULL,
    id_internalunit    INTEGER NOT NULL,
    id_company         INTEGER NOT NULL,
    id_superior_unit   INTEGER
);

ALTER TABLE assigned_unit ADD CONSTRAINT assigned_unit_pk PRIMARY KEY ( id );

CREATE TABLE commune (
    id            INTEGER NOT NULL,
    name          VARCHAR2(255) NOT NULL,
    id_province   INTEGER NOT NULL
);

ALTER TABLE commune ADD CONSTRAINT commune_pk PRIMARY KEY ( id );

CREATE TABLE company (
    id               INTEGER NOT NULL,
    name             VARCHAR2(255) NOT NULL,
    address          NVARCHAR2(255) NOT NULL,
    logo             BLOB,
    id_workingarea   INTEGER NOT NULL,
    id_commune       INTEGER NOT NULL
);

ALTER TABLE company ADD CONSTRAINT company_pk PRIMARY KEY ( id );

CREATE TABLE day_of_week (
    id     INTEGER NOT NULL,
    name   NVARCHAR2(12) NOT NULL
);

ALTER TABLE day_of_week ADD CONSTRAINT day_of_week_pk PRIMARY KEY ( id );

CREATE TABLE gender (
    id     INTEGER NOT NULL,
    name   VARCHAR2(20) NOT NULL
);

ALTER TABLE gender ADD CONSTRAINT gender_pk PRIMARY KEY ( id );

CREATE TABLE internal_unit (
    id        INTEGER NOT NULL,
    name      NVARCHAR2(255) NOT NULL,
    id_role   INTEGER NOT NULL
);

ALTER TABLE internal_unit ADD CONSTRAINT role_pk PRIMARY KEY ( id );

CREATE TABLE loop_task (
    id                   INTEGER NOT NULL,
    id_task_assignment   INTEGER NOT NULL,
    time                 DATE NOT NULL,
    isactive             CHAR(1) NOT NULL
);

ALTER TABLE loop_task ADD CONSTRAINT loop_task_pk PRIMARY KEY ( id );

CREATE TABLE loop_task_schedule (
    id_loop_task   INTEGER NOT NULL,
    id_dayofweek   INTEGER,
    dayofmonth     INTEGER,
    numberofweek   INTEGER,
    id_month       INTEGER
);

CREATE TABLE month (
    id     INTEGER NOT NULL,
    name   NVARCHAR2(12) NOT NULL
);

ALTER TABLE month ADD CONSTRAINT month_pk PRIMARY KEY ( id );

CREATE TABLE permission (
    id            INTEGER NOT NULL,
    name          NVARCHAR2(250) NOT NULL,
    description   NVARCHAR2(500)
);

ALTER TABLE permission ADD CONSTRAINT permissions_pk PRIMARY KEY ( id );

CREATE TABLE processed_task (
    id                        INTEGER NOT NULL,
    "Comment"                 NVARCHAR2(512),
    assignationdate           DATE NOT NULL,
    enddate                   DATE NOT NULL,
    id_superiorassignedtask   INTEGER,
    id_taskstatus             INTEGER NOT NULL,
    id_dependenttask          INTEGER,
    id_looptask               INTEGER,
    id_task_assignment        INTEGER NOT NULL
);

ALTER TABLE processed_task ADD CONSTRAINT assigned_task_pk PRIMARY KEY ( id );

CREATE TABLE processed_task_history (
    id                    INTEGER NOT NULL,
    id_assignedtask       INTEGER NOT NULL,
    description           NVARCHAR2(512) NOT NULL,
    eventdatetime         DATE NOT NULL,
    justification         NVARCHAR2(510),
    id_userjustificator   INTEGER
);

ALTER TABLE processed_task_history ADD CONSTRAINT atask_change_history_pk PRIMARY KEY ( id );

CREATE TABLE province (
    id          INTEGER NOT NULL,
    name        NVARCHAR2(255) NOT NULL,
    id_region   INTEGER NOT NULL
);

ALTER TABLE province ADD CONSTRAINT province_pk PRIMARY KEY ( id );

CREATE TABLE region (
    id     INTEGER NOT NULL,
    name   NVARCHAR2(255) NOT NULL
);

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY ( id );

CREATE TABLE role (
    id     INTEGER NOT NULL,
    name   NVARCHAR2(64) NOT NULL
);

ALTER TABLE role ADD CONSTRAINT role_pkv3 PRIMARY KEY ( id );

CREATE TABLE role_type_permissions (
    id_roletype     INTEGER NOT NULL,
    id_permission   INTEGER NOT NULL
);

ALTER TABLE role_type_permissions ADD CONSTRAINT role_type_permissions_pk PRIMARY KEY ( id_roletype,
                                                                                        id_permission );

CREATE TABLE task (
    id               INTEGER NOT NULL,
    name             NVARCHAR2(255) NOT NULL,
    description      NVARCHAR2(510) NOT NULL,
    ispredefinided   CHAR(1) NOT NULL
);

ALTER TABLE task ADD CONSTRAINT tasks_pk PRIMARY KEY ( id );

CREATE TABLE task_assignment (
    id                INTEGER NOT NULL,
    id_task           INTEGER NOT NULL,
    id_assigneruser   INTEGER NOT NULL,
    id_receiveruser   INTEGER
);

ALTER TABLE task_assignment ADD CONSTRAINT task_assignment_pk PRIMARY KEY ( id );

CREATE TABLE task_status (
    id       INTEGER NOT NULL,
    status   NVARCHAR2(255) NOT NULL
);

ALTER TABLE task_status ADD CONSTRAINT task_status_pk PRIMARY KEY ( id );

CREATE TABLE "USER" (
    id                 INTEGER NOT NULL,
    firstname          NVARCHAR2(255) NOT NULL,
    lastname           NVARCHAR2(255) NOT NULL,
    address            NVARCHAR2(255) NOT NULL,
    email              NVARCHAR2(255) NOT NULL,
    phone              VARCHAR2(20) NOT NULL,
    birthdate          DATE NOT NULL,
    username           NVARCHAR2(255) NOT NULL,
    password           NVARCHAR2(512) NOT NULL,
    id_commune         INTEGER NOT NULL,
    id_assigned_unit   INTEGER NOT NULL,
    id_company         INTEGER,
    id_gender          INTEGER NOT NULL
);

CREATE UNIQUE INDEX username_idx ON
    "USER" (
        username
    ASC );

CREATE UNIQUE INDEX email__idx ON
    "USER" (
        email
    ASC );

ALTER TABLE "USER" ADD CONSTRAINT user_pk PRIMARY KEY ( id );

CREATE TABLE workingarea (
    id     INTEGER NOT NULL,
    name   NVARCHAR2(255) NOT NULL
);

ALTER TABLE workingarea ADD CONSTRAINT workingarea_pk PRIMARY KEY ( id );

ALTER TABLE processed_task
    ADD CONSTRAINT assigned_task_loop_task_fk FOREIGN KEY ( id_looptask )
        REFERENCES loop_task ( id );

ALTER TABLE processed_task
    ADD CONSTRAINT assigned_task_proc_task_fk FOREIGN KEY ( id_task_assignment )
        REFERENCES task_assignment ( id );

ALTER TABLE processed_task
    ADD CONSTRAINT assigned_task_task_fk FOREIGN KEY ( id_taskstatus )
        REFERENCES task_status ( id );

ALTER TABLE assigned_unit
    ADD CONSTRAINT assigned_unit_assigned_role_fk FOREIGN KEY ( id_superior_unit )
        REFERENCES assigned_unit ( id );

ALTER TABLE assigned_unit
    ADD CONSTRAINT assigned_unit_company_fk FOREIGN KEY ( id_company )
        REFERENCES company ( id );

ALTER TABLE assigned_unit
    ADD CONSTRAINT assigned_unit_role_fk FOREIGN KEY ( id_internalunit )
        REFERENCES internal_unit ( id );

ALTER TABLE processed_task
    ADD CONSTRAINT assigntask_assigneruser_fk FOREIGN KEY ( id_superiorassignedtask )
        REFERENCES processed_task ( id );

ALTER TABLE processed_task
    ADD CONSTRAINT assigntask_assigntask_fkv1 FOREIGN KEY ( id_dependenttask )
        REFERENCES processed_task ( id );

ALTER TABLE processed_task_history
    ADD CONSTRAINT atask_change_history_user_fk FOREIGN KEY ( id_userjustificator )
        REFERENCES "USER" ( id );

ALTER TABLE commune
    ADD CONSTRAINT commune_province_fk FOREIGN KEY ( id_province )
        REFERENCES province ( id );

ALTER TABLE company
    ADD CONSTRAINT company_commune_fk FOREIGN KEY ( id_commune )
        REFERENCES commune ( id );

ALTER TABLE company
    ADD CONSTRAINT company_workingarea_fk FOREIGN KEY ( id_workingarea )
        REFERENCES workingarea ( id );

ALTER TABLE province
    ADD CONSTRAINT id_region_fk FOREIGN KEY ( id_region )
        REFERENCES region ( id );

ALTER TABLE loop_task
    ADD CONSTRAINT loop_task_month_fk FOREIGN KEY ( id_task_assignment )
        REFERENCES task_assignment ( id );

ALTER TABLE loop_task_schedule
    ADD CONSTRAINT lt_schedule_day_of_week_fk FOREIGN KEY ( id_dayofweek )
        REFERENCES day_of_week ( id );

ALTER TABLE loop_task_schedule
    ADD CONSTRAINT lt_schedule_loop_task_fk FOREIGN KEY ( id_loop_task )
        REFERENCES loop_task ( id );

ALTER TABLE loop_task_schedule
    ADD CONSTRAINT lt_schedule_month_fk FOREIGN KEY ( id_month )
        REFERENCES month ( id );

ALTER TABLE internal_unit
    ADD CONSTRAINT role_internalunit_fk FOREIGN KEY ( id_role )
        REFERENCES role ( id );

ALTER TABLE role_type_permissions
    ADD CONSTRAINT rtype_permission_p_fk FOREIGN KEY ( id_permission )
        REFERENCES permission ( id );

ALTER TABLE role_type_permissions
    ADD CONSTRAINT rtype_permission_rt_fk FOREIGN KEY ( id_roletype )
        REFERENCES role ( id );

ALTER TABLE processed_task_history
    ADD CONSTRAINT table_18_assigned_task_fk FOREIGN KEY ( id_assignedtask )
        REFERENCES processed_task ( id );

ALTER TABLE task_assignment
    ADD CONSTRAINT task_assignment_fk FOREIGN KEY ( id_task )
        REFERENCES task ( id );

ALTER TABLE task_assignment
    ADD CONSTRAINT task_assignment_user_fk FOREIGN KEY ( id_assigneruser )
        REFERENCES "USER" ( id );

ALTER TABLE task_assignment
    ADD CONSTRAINT task_receiver_user_fk FOREIGN KEY ( id_receiveruser )
        REFERENCES "USER" ( id );

ALTER TABLE "USER"
    ADD CONSTRAINT user_assigned_role_fk FOREIGN KEY ( id_assigned_unit )
        REFERENCES assigned_unit ( id );

ALTER TABLE "USER"
    ADD CONSTRAINT user_commune_fk FOREIGN KEY ( id_commune )
        REFERENCES commune ( id );

ALTER TABLE "USER"
    ADD CONSTRAINT user_company_fk FOREIGN KEY ( id_company )
        REFERENCES company ( id );

ALTER TABLE "USER"
    ADD CONSTRAINT user_gender_fk FOREIGN KEY ( id_gender )
        REFERENCES gender ( id );



-- Informe de Resumen de Oracle SQL Developer Data Modeler: 
-- 
-- CREATE TABLE                            21
-- CREATE INDEX                             2
-- ALTER TABLE                             48
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
